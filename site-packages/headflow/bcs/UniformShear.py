from ..dol import *

from .bcutils import get_area

class UniformShear(Constant):
    areas = {}
    
    def __init__(self, u, ind, C=10000):
        try:
            mesh = u[0].function_space().mesh()
        except:
            mesh = u.function_space().mesh()
        
        if ind in self.areas:
            A = self.areas[ind]
        else:
            A = get_area(mesh, ind)
            self.areas[ind] = A
        
        fd = mesh.domains().facet_domains()
        assert fd is not None, "Assuming a mesh with attached facet domains!"
        dsi = ds[fd](ind)
            
        n = FacetNormal(mesh)
        
        form = 0
        for i in xrange(mesh.geometry().dim()):
            form += u[i]*n[i]
        form *= dsi
        
        Q = assemble(form)

        Constant.__init__(self, C*Q/A**1.5)
