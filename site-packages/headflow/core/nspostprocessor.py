__author__ = "Martin Sandve Alnaes <martinal@simula.no>"
__date__ = "2013-03-31"
__copyright__ = "Copyright (C) 2013 " + __author__
__license__  = "GNU GPL version 3 or any later version"

from .paramdict import ParamDict

# FIXME: Move suitable parts of functionality from scheme and problem into this class.
# TODO: Then refine into a nice interface.

class NSPostProcessor:
    "Baseclass for Navier-Stokes solution postprocessors."
    def __init__(self, params=None):
        self.params = self.default_params()
        self.params.update_recursive(params)

    @classmethod
    def default_postprocessor_params(cls):
        "Subclasses should implement this to define postprocessor specific parameters."
        return {}

    @classmethod
    def default_params(cls):
        # TODO: Store with structure params.common.* and params.specific.* or similar?
        # TODO: Insert generic nspostprocessor params here
        params = ParamDict(casedir="results")
        params.update_recursive(cls.default_postprocessor_params())
        return params
