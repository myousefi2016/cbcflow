__author__ = "Martin Sandve Alnaes <martinal@simula.no>"
__date__ = "2013-04-05"
__copyright__ = "Copyright (C) 2013 " + __author__
__license__  = "GNU GPL version 3 or any later version"

from .paramdict import ParamDict

class Parameterized(object):
    "Core functionality for parameterized subclassable components."
    def __init__(self, params):
        self.params = self.default_params()
        self.params.update_recursive(params)

    @classmethod
    def default_user_params(cls):
        "The subclass can implement this to add subclass specific parameters."
        return ParamDict()

    @classmethod
    def default_base_params(cls):
        "The base class can implement this to add generic parameters."
        return ParamDict()

    @classmethod
    def default_params(cls):
        "Merges base and user params into one ParamDict."
        params = cls.default_base_params()
        params.update_recursive(cls.default_user_params())
        return params
