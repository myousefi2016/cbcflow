from .MetaPPField import MetaPPField
from dolfin import *

class TimeDerivative(MetaPPField):
    def compute(self, pp, spaces, problem):
        u1 = pp.get(self.valuename)
        u0 = pp.get(self.valuename, -1)

        t1 = pp.get("t")
        t0 = pp.get("t", -1)
        dt = t1 - t0

        # Create function to hold result first time,
        # assuming u1 and u0 are Functions in same space
        if not hasattr(self, "_du"):
            self._du = Function(u1.function_space())

        # Compute finite difference derivative # FIXME: Validate this, not tested!
        self._du.zero()
        self._du.vector().axpy(+1.0/dt, u1)
        self._du.vector().axpy(-1.0/dt, u0)
        return self._du
