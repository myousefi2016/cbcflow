from .ppfield import PPField
from dolfin import *

class VelocityGradient(PPField):
    def __init__(self, params=None):
        PPField.__init__(self, params)

    def before_first_compute(self, pp, problem):
        if self.params.assemble:
            # TODO: Replace with spaces
            DG = TensorFunctionSpace(problem.mesh, "DG", 0)
            self.v = TestFunction(DG)
            self.velocitygradient = Function(DG, name="VelocityGradient")
            
    def compute(self, pp, problem):
        u = pp.get("Velocity")

        if self.params.assemble:
            assemble(inner(grad(u), self.v)*dx, tensor=self.velocitygradient.vector())
            return self.velocitygradient
        else:
            return grad(u)
        