
from .ppfieldbase import PPFieldBase
from math import sqrt 
from dolfin import assemble

class EnergyAnalyzer(PPFieldBase): 
    def __init__(self, **kwargs):
        PPFieldBase.__init__(self, **kwargs)

    def update(self, u, p, t, timestep, problem): 
        dx = problem.dx
        u0_norm = sqrt(assemble(u[0]**2*dx()))
        u1_norm = sqrt(assemble(u[1]**2*dx()))
        u2_norm = sqrt(assemble(u[2]**2*dx()))
        energy = sqrt(u0_norm**2 +  u1_norm**2 + u2_norm**2)

        data = {"u0" : u0_norm, "u1": u1_norm, "u2": u2_norm, "kinetic energy": energy}
        self.set_data(t, timestep, data)

        # FIXME: Dont print from fields, make it easy to control printing with parameters instead
        print "t ", t, " kinetic energy  ", energy  

