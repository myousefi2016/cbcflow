
from .ppfieldbase import PPFieldBase
import dolfin # TODO: Use headflow.dol instead
from math import sqrt 

class EnergyAnalyzer(PPFieldBase): 
    def __init__(self, **kwargs):
        PPFieldBase.__init__(self, **kwargs)

    def update(self, u, p, t, timestep, problem): 
        u0_norm = sqrt(dolfin.assemble(pow(u[0],2)*problem.dx() ))
        u1_norm = sqrt(dolfin.assemble(pow(u[1],2)*problem.dx() ))
        u2_norm = sqrt(dolfin.assemble(pow(u[2],2)*problem.dx() ))
        energy = sqrt (u0_norm*u0_norm +  u1_norm*u1_norm +u2_norm*u2_norm )
        self.set_data(t, timestep, {"u0" : u0_norm, "u1": u1_norm, "u2": u2_norm, "kinetic energy": energy})
        print "t ", t, " kinetic energy  ", energy  


