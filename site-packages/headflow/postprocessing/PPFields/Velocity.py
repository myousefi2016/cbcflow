
from ...dol import *
from .ppfieldbase import PPFieldBase

class Velocity(PPFieldBase):
    def __init__(self, **kwargs):
        PPFieldBase.__init__(self, **kwargs)

    def before_first_update(self, u, p, t, timestep, problem):
        if isinstance(u[0], Function):
            self.V = VectorFunctionSpace(problem.mesh, "CG", u[0].function_space().ufl_element().degree())
            self.u_vec = Function(self.V)
        elif not isinstance(u, Function): # FIXME: Very ugly hack to make mixed code work!!!
            self.V = VectorFunctionSpace(problem.mesh, "CG", 2)
            self.u_vec = Function(self.V)

    def update(self, u, p, t, timestep, problem):
        # TODO: Streamline fetching of u in vector format
        if isinstance(u, list):
            u = as_vector(u)
        if isinstance(u, Function):
            self.u_vec = u
        else:
            self.u_vec.assign(project(u, self.V))

        self.set_data(t, timestep, self.u_vec)
