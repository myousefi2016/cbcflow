from .PPField import PPField
from dolfin import Function, FunctionAssigner
from ..core.spaces import NSSpacePoolMixed, NSSpacePoolSplit, NSSpacePoolSegregated

class Velocity(PPField):
    def convert(self, pp, spaces, problem):
        # Hack to get given u in whatever format it has,
        # avoiding circular reference to this field
        u = super(Velocity, self).convert(pp, spaces, problem)

        # Convert u into a Function if the scheme is segregated or mixed
        if not isinstance(u, Function):
            if not hasattr(self, "_u"):
                self._assigner = FunctionAssigner([spaces.U, spaces.U, spaces.U], spaces.V)
                self._u = Function(spaces.V)
            
            self._assigner.assign([u[0], u[1], u[2]], self._u)
            u = self._u
        
        assert isinstance(u, Function)

        return u
