
from fractions import gcd
from os.path import isfile, isdir, join
from os import listdir, makedirs

from ..dol import Function, File, MPI

from ..core.paramdict import ParamDict
from ..core.parameterized import Parameterized

from ..core.utils import headflow_warning

class PPField(Parameterized):
    def __init__(self, params=None):
        Parameterized.__init__(self, params)

        # TODO: Move (some of) this metadata to NSPostProcessor?
        self._compute_count = 0
        #self._save_count = 0
        self._finalized = False
        self._previous_computetime = -1e16
        self._previous_computetimestep = -1e16
        self._savefiles = {}
        self._datatype = None

    @classmethod
    def default_base_params(cls):
        params = ParamDict(
            # Configure direct compute requests through timestep counting
            start_timestep = -1e16,
            end_timestep = 1e16,
            stride_timestep = 1,

            # Configure direct compute requests through physical time intervals
            start_time = -1e16,
            end_time = 1e16,
            stride_time = 1e-16,

            # Trigger action after each direct compute request
            plot = False,
            save = False,
            callback = False,

            # Configure computing
            assemble = True,

            # Configure saving
            save_as = "determined by data",
            )
        return params

    @property
    def name(self):
        "Return name of field, by default the classname but can be overloaded in subclass."
        return self.__class__.__name__

    def before_first_compute(self, pp, problem): # TODO: Arguments?
        "Called prior to the simulation timeloop."
        pass

    def after_last_compute(self, pp, problem): # TODO: Arguments?
        "Called after the simulation timeloop."
        pass

    def compute(self, pp, problem): # TODO: Arguments?
        "Called each time the quantity should be computed."
        raise NotImplementedError("A PPField must implement the compute function!")
